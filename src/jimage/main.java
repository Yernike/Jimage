package jimage;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author leo
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;



    /**
 *
 * @author yeray
 */
public class main extends javax.swing.JFrame {
    /**
     * Creates new form main
     */
    public JDesktopPane dp;

   
    
    public main() {
        initComponents();
        dp = new JDesktopPane();
        dp.setVisible(true);
        
        this.setContentPane(dp);
       // addEventos();
        //jLabel2.setVerticalAlignment();
        jLabel2.setAlignmentY(Component.BOTTOM_ALIGNMENT);
        jLabel2.setText("");
        dp.add(jLabel2);
        //his.setExtendedState(MAXIMIZED_BOTH);
         
               
    }
 /*public void addEventos(){
    
        addMouseMotionListener(new MouseMotionAdapter(){
             @Override
            public void mouseMoved(MouseEvent evento){
                  JInternalFrame1 ji = (JInternalFrame1) dp.getSelectedFrame();
                  Point p = MouseInfo.getPointerInfo().getLocation();
              jLabel2.setText(String.format("Sus coordenadas son [%d, %d]",
                  //getX y getY devuelve valores de las coordenadas del puntero.
                     p.x,p.y));            }
         });
 }*/
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" Jimage - Procesamiento digital de imágenes");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);

        jLabel2.setBackground(java.awt.Color.lightGray);
        jLabel2.setText("jLabel2");
        jLabel2.setName("label_posX"); // NOI18N
        jLabel2.setOpaque(true);

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Guardar como");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Salir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ver");

        jMenuItem6.setText("Histograma absoluto");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Histograma acumulativo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem15.setText("Info de la imagen");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Herramientas");

        jMenuItem5.setText("Convertir a escala de grises");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem14.setText("Brillo / Contraste");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem14);

        jMenuItem10.setText("Entropía");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem12.setText("Gamma");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 551, Short.MAX_VALUE)
                .addComponent(jLabel2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // ARCHIVO -> GUARDAR
        this.getFocusOwner();
        open_save_image a = new open_save_image();
        JInternalFrame1 ji = (JInternalFrame1) dp.getSelectedFrame();
       a.guardar_imagen(ji.imagen);

        
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // ARCHIVO -> ABRIR
        JInternalFrame1 jif1 = new JInternalFrame1();
        jif1.Ji_abrir_imagen(null);
        jif1.addEventos(jLabel2);
        dp.add(jif1, BorderLayout.CENTER);
        
        
        try {
            jif1.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed
   
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
         // ARCHIVO -> GUARDAR COMO
        int a=1;
        JInternalFrame1  ddpp = (JInternalFrame1) dp.getSelectedFrame();
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        //HERRAMIENTAS -> Convertir a escala de grises
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        BufferedImage img = new BufferedImage(tji.imagen.getWidth(),tji.imagen.getHeight(),BufferedImage.TYPE_INT_RGB);
        
        //Creo una copia de BufferedImage
        Graphics g = img.createGraphics();
        g.drawImage(tji.imagen, 0, 0, null);
        g.dispose();
        
        //Se crea una nueva ventana con la imagen original y se le aplica el B&W
        JInternalFrame1 bw_ji = new JInternalFrame1();
        bw_ji.Ji_abrir_imagen(img);
        bw_ji.Ji_to_bw();
        
        dp.add(bw_ji);
        
        
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // VER -> DIAGRAMA ABSOLUTO
         JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        JInternalFrame1 jif1 = new JInternalFrame1(tji.imagen);
        jif1.Ji_histograma_abs();
        dp.add(jif1);
    }                                          

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
       // SALIR
        System.exit(0);
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
       // VER -> DIAGRAMA ACUMULATIVO
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        JInternalFrame1 jif1 = new JInternalFrame1(tji.imagen);
        jif1.Ji_histograma_acu();
        dp.add(jif1); 
    }//GEN-LAST:event_jMenuItem7ActionPerformed
    
    
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	//HERRAMIENTAS -> Convertir a escala de grises
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        BufferedImage img = new BufferedImage(tji.imagen.getWidth(),tji.imagen.getHeight(),BufferedImage.TYPE_INT_RGB);
        
        //Creo una copia de BufferedImage
        Graphics g = img.createGraphics();
        g.drawImage(tji.imagen, 0, 0, null);
        g.dispose();
        
        //Se crea una nueva ventana con la imagen original y se le aplica el B&W
        JInternalFrame1 brillo_ji = new JInternalFrame1();
        brillo_ji.Ji_abrir_imagen(img);
        brillo_ji.Ji_brillo();
        
        dp.add(brillo_ji);
    }                                          
    
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        // AQUIIIIIIIIII
        
        
    }
    
    


    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
    	//HERRAMIENTAS -> Contraste
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        BufferedImage img = new BufferedImage(tji.imagen.getWidth(),tji.imagen.getHeight(),BufferedImage.TYPE_INT_RGB);
        
        //Creo una copia de BufferedImage
        Graphics g = img.createGraphics();
        g.drawImage(tji.imagen, 0, 0, null);
        g.dispose();
        
        //Se crea una nueva ventana con la imagen original y se le aplica el B&W
        JInternalFrame1 contraste_ji = new JInternalFrame1();
        contraste_ji.Ji_abrir_imagen(img);
        contraste_ji.Ji_contraste();
        
        dp.add(contraste_ji);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // HERRAMIENTAS -> GAMMA
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        BufferedImage img = new BufferedImage(tji.imagen.getWidth(),tji.imagen.getHeight(),BufferedImage.TYPE_INT_RGB);
        
        //Creo una copia de BufferedImage
        Graphics g = img.createGraphics();
        g.drawImage(tji.imagen, 0, 0, null);
        g.dispose();
        
        //Se crea una nueva ventana con la imagen original y se le aplica el B&W
        JInternalFrame1 gamma_ji = new JInternalFrame1();
        gamma_ji.Ji_abrir_imagen(img);
        gamma_ji.Ji_gamma();
        
        dp.add(gamma_ji);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // HERRAMIENTAS -> ENTROPIA
       
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        pixel_imagen tmp = new pixel_imagen();
        double entropia = tmp.entropia(tji.imagen);
        JOptionPane.showInternalMessageDialog(dp, "Entropia: "+entropia); 
        
  
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // HERRAMIENTAS -> BRILLO / CONTRASTE
       JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
       JInternalOption slide = new JInternalOption(tji);
       slide.setVisible(true);
        dp.add(slide);
        
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // VER -> Info de la imagen
        JInternalFrame1 tji = (JInternalFrame1) dp.getSelectedFrame();
        pixel_imagen pi = new pixel_imagen();
        int tama1 = pi.width(tji.imagen);
        int tama2 = pi.height(tji.imagen); 
        int rangMenor = pi.ranMenor(tji.imagen);
        int rangMayor = pi.ranMayor(tji.imagen);
        JOptionPane.showInternalMessageDialog(dp, "Tamanio: " +tama1+ " x "+tama2+""
                + "\nRango de valores:  ["+rangMenor+"]"+"["+rangMayor+"]"
                + "\nBrillo medio: " + pi.getBrillo(tji.imagen)
                + "\nContraste medio: " + pi.getContraste(tji.imagen)); 
    
    }//GEN-LAST:event_jMenuItem15ActionPerformed
    
    
    
/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
       
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }
    //private javax.swing.JFileChooser jFileChooser1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    // End of variables declaration//GEN-END:variables
}
